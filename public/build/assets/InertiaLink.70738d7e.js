import{S as C,i as D,s as E,B as L,G as b,e as P,H as k,g as T,u as v,C as H,D as N,E as O,I as U,t as q,k as A,l as B,J as y,K as F,L as G,M as J,N as _}from"./main.7d134d9f.js";function K(n){let a,s,o,f;const u=n[11].default,l=L(u,n,n[10],null);let c=[n[2],{href:n[0]}],i={};for(let e=0;e<c.length;e+=1)i=b(i,c[e]);return{c(){a=P("a"),l&&l.c(),k(a,i)},m(e,r){T(e,a,r),l&&l.m(a,null),s=!0,o||(f=v(a,"click",n[1]),o=!0)},p(e,[r]){l&&l.p&&(!s||r&1024)&&H(l,u,e,e[10],s?O(u,e[10],r,null):N(e[10]),null),k(a,i=U(c,[r&4&&e[2],(!s||r&1)&&{href:e[0]}]))},i(e){s||(q(l,e),s=!0)},o(e){A(l,e),s=!1},d(e){e&&B(a),l&&l.d(e),o=!1,f()}}}function M(n,a,s){const o=["data","href","method","replace","preserveScroll","preserveState","only","headers"];let f=y(a,o),{$$slots:u={},$$scope:l}=a;const c=F();let{data:i={},href:e,method:r="get",replace:d=!1,preserveScroll:m=!1,preserveState:h=null,only:g=[],headers:S={}}=a;G(()=>{s(4,r=r.toLowerCase());const[t,p]=_.mergeDataIntoQueryString(r,e,i);s(0,e=t),s(3,i=p),r!=="get"&&console.warn(`Creating POST/PUT/PATCH/DELETE <a> links is discouraged as it causes "Open Link in New Tab/Window" accessibility issues.

Please specify a more appropriate element using the "inertia" directive. For example:

<button use:inertia={{ method: 'post', href: '${e}' }}>...</button>`)});function I(t){c("click",t),_.shouldIntercept(t)&&(t.preventDefault(),_.Inertia.visit(e,{data:i,method:r,preserveScroll:m,preserveState:h!==null?h:r!=="get",replace:d,only:g,headers:S}))}return n.$$set=t=>{a=b(b({},a),J(t)),s(2,f=y(a,o)),"data"in t&&s(3,i=t.data),"href"in t&&s(0,e=t.href),"method"in t&&s(4,r=t.method),"replace"in t&&s(5,d=t.replace),"preserveScroll"in t&&s(6,m=t.preserveScroll),"preserveState"in t&&s(7,h=t.preserveState),"only"in t&&s(8,g=t.only),"headers"in t&&s(9,S=t.headers),"$$scope"in t&&s(10,l=t.$$scope)},[e,I,f,i,r,d,m,h,g,S,l,u]}class W extends C{constructor(a){super(),D(this,a,M,K,E,{data:3,href:0,method:4,replace:5,preserveScroll:6,preserveState:7,only:8,headers:9})}}export{W as I};
